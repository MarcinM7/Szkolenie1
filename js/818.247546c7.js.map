{"version":3,"file":"js/818.247546c7.js","mappings":"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","sources":["webpack://arcanoid-vue/./src/views/GameView.vue","webpack://arcanoid-vue/./src/views/GameView.vue?3e8c"],"sourcesContent":["<template>\r\n  <div class=\"game-view\">\r\n    <img id=\"img_ball\" src=\"../assets/ball.png\">\r\n    <canvas id=\"gameScreen\" width=\"800\" height=\"600\"></canvas>\r\n    <div class=\"game-stats\">\r\n      <p>Punkty: {{ score }}</p>\r\n      <p>Życia: {{ lives }}</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { onMounted, onBeforeUnmount, ref } from 'vue'\r\n\r\nconst score = ref(0)\r\nconst lives = ref(3)\r\nconst gameOver = ref(false)\r\n\r\nlet canvas, ctx\r\nlet paddle = {\r\n  width: 100,\r\n  height: 20,\r\n  x: 350,\r\n  y: 580,\r\n  speed: 7,\r\n  dx: 0\r\n}\r\n\r\nlet ball = {\r\n  x: 400,\r\n  y: 300,\r\n  size: 10,\r\n  speed: 2,\r\n  dx: 4,\r\n  dy: -4\r\n}\r\n\r\n// Ustawienia klocków\r\nconst brickRowCount = 5\r\nconst brickColumnCount = 9\r\nconst brickWidth = 70\r\nconst brickHeight = 20\r\nconst brickPadding = 10\r\nconst brickOffsetTop = 60\r\nconst brickOffsetLeft = 35\r\n\r\n// Tworzenie tablicy klocków\r\nlet bricks = []\r\nfor (let c = 0; c < brickColumnCount; c++) {\r\n  bricks[c] = []\r\n  for (let r = 0; r < brickRowCount; r++) {\r\n    bricks[c][r] = { x: 0, y: 0, status: 1 }\r\n  }\r\n}\r\n\r\nconst drawBall = () => {\r\n  ctx.beginPath()\r\n  ctx.arc(ball.x, ball.y, ball.size, 0, Math.PI * 2)\r\n  ctx.fillStyle = '#FF5733'\r\n  ctx.fill()\r\n  ctx.closePath()\r\n}\r\n\r\nconst drawPaddle = () => {\r\n  ctx.fillStyle = '#0095DD'\r\n  ctx.fillRect(paddle.x, paddle.y, paddle.width, paddle.height)\r\n}\r\n\r\nconst drawBricks = () => {\r\n  for (let c = 0; c < brickColumnCount; c++) {\r\n    for (let r = 0; r < brickRowCount; r++) {\r\n      if (bricks[c][r].status === 1) {\r\n        const brickX = c * (brickWidth + brickPadding) + brickOffsetLeft\r\n        const brickY = r * (brickHeight + brickPadding) + brickOffsetTop\r\n        bricks[c][r].x = brickX\r\n        bricks[c][r].y = brickY\r\n        \r\n        // Każdy rząd ma inny kolor\r\n        const colors = ['#FF0000', '#FF7F00', '#FFFF00', '#00FF00', '#0000FF']\r\n        ctx.fillStyle = colors[r]\r\n        ctx.fillRect(brickX, brickY, brickWidth, brickHeight)\r\n        ctx.strokeStyle = '#000'\r\n        ctx.strokeRect(brickX, brickY, brickWidth, brickHeight)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst drawGameOver = () => {\r\n  ctx.font = '48px Arial'\r\n  ctx.fillStyle = '#FF0000'\r\n  ctx.textAlign = 'center'\r\n  ctx.fillText('KONIEC GRY', canvas.width / 2, canvas.height / 2)\r\n  ctx.font = '24px Arial'\r\n  ctx.fillText('Naciśnij SPACJĘ aby zagrać ponownie', canvas.width / 2, canvas.height / 2 + 50)\r\n}\r\n\r\nconst drawWin = () => {\r\n  ctx.font = '48px Arial'\r\n  ctx.fillStyle = '#00FF00'\r\n  ctx.textAlign = 'center'\r\n  ctx.fillText('WYGRAŁEŚ!', canvas.width / 2, canvas.height / 2)\r\n  ctx.font = '24px Arial'\r\n  ctx.fillText('Naciśnij SPACJĘ aby zagrać ponownie', canvas.width / 2, canvas.height / 2 + 50)\r\n}\r\n\r\n// Sprawdzanie kolizji piłki z klockami\r\nconst collisionDetection = () => {\r\n  for (let c = 0; c < brickColumnCount; c++) {\r\n    for (let r = 0; r < brickRowCount; r++) {\r\n      const b = bricks[c][r]\r\n      if (b.status === 1) {\r\n        if (\r\n          ball.x > b.x && \r\n          ball.x < b.x + brickWidth && \r\n          ball.y > b.y && \r\n          ball.y < b.y + brickHeight\r\n        ) {\r\n          ball.dy = -ball.dy\r\n          b.status = 0\r\n          score.value += 10\r\n          \r\n          // Sprawdzenie wygranej\r\n          let allBricksDestroyed = true\r\n          for (let c = 0; c < brickColumnCount; c++) {\r\n            for (let r = 0; r < brickRowCount; r++) {\r\n              if (bricks[c][r].status === 1) {\r\n                allBricksDestroyed = false\r\n                break\r\n              }\r\n            }\r\n            if (!allBricksDestroyed) break\r\n          }\r\n          \r\n          if (allBricksDestroyed) {\r\n            gameOver.value = true\r\n            setTimeout(() => {\r\n              resetGame(true)\r\n            }, 3000)\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// Resetowanie gry\r\nconst resetGame = (win = false) => {\r\n  if (win) {\r\n    // Zwiększenie trudności po wygranej\r\n    ball.speed += 1\r\n  } else {\r\n    // Reset po przegranej\r\n    score.value = 0\r\n    lives.value = 3\r\n    ball.speed = 4\r\n  }\r\n  \r\n  gameOver.value = false\r\n  ball.x = canvas.width / 2\r\n  ball.y = canvas.height / 2\r\n  ball.dx = ball.speed\r\n  ball.dy = -ball.speed\r\n  paddle.x = (canvas.width - paddle.width) / 2\r\n  \r\n  // Reset klocków\r\n  for (let c = 0; c < brickColumnCount; c++) {\r\n    for (let r = 0; r < brickRowCount; r++) {\r\n      bricks[c][r].status = 1\r\n    }\r\n  }\r\n}\r\n\r\nconst update = () => {\r\n  if (gameOver.value) {\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height)\r\n    drawPaddle()\r\n    if (lives.value <= 0) {\r\n      drawGameOver()\r\n    } else {\r\n      drawWin()\r\n    }\r\n    return\r\n  }\r\n  \r\n  ctx.clearRect(0, 0, canvas.width, canvas.height)\r\n  \r\n  drawBricks()\r\n  drawBall()\r\n  drawPaddle()\r\n  collisionDetection()\r\n  \r\n  // Piłka dotyka ściany - odbijanie\r\n  if (ball.x + ball.dx > canvas.width - ball.size || ball.x + ball.dx < ball.size) {\r\n    ball.dx = -ball.dx\r\n  }\r\n  \r\n  // Piłka dotyka góry - odbijanie\r\n  if (ball.y + ball.dy < ball.size) {\r\n    ball.dy = -ball.dy\r\n  }\r\n  \r\n  // Piłka dotyka dołu - utrata życia lub game over\r\n  if (ball.y + ball.dy > canvas.height - ball.size) {\r\n    // Sprawdzenie kolizji z paletką\r\n    if (ball.x > paddle.x && ball.x < paddle.x + paddle.width) {\r\n      // Zmiana kierunku odbicia w zależności od miejsca uderzenia\r\n      const hitPosition = ball.x - (paddle.x + paddle.width / 2)\r\n      const normalized = hitPosition / (paddle.width / 2)\r\n      const angle = normalized * Math.PI / 3 // max 60 stopni odbicia\r\n      \r\n      ball.dx = Math.sin(angle) * ball.speed\r\n      ball.dy = -Math.cos(angle) * ball.speed\r\n    } else {\r\n      lives.value--\r\n      \r\n      if (lives.value <= 0) {\r\n        gameOver.value = true\r\n      } else {\r\n        // Reset piłki\r\n        ball.x = canvas.width / 2\r\n        ball.y = canvas.height / 2\r\n        ball.dx = ball.speed\r\n        ball.dy = -ball.speed\r\n        paddle.x = (canvas.width - paddle.width) / 2\r\n      }\r\n    }\r\n  }\r\n  \r\n  // Aktualizacja pozycji piłki\r\n  ball.x += ball.dx\r\n  ball.y += ball.dy\r\n  \r\n  // Aktualizacja pozycji paletki\r\n  paddle.x += paddle.dx\r\n  \r\n  // Granice ekranu dla paletki\r\n  if (paddle.x < 0) paddle.x = 0\r\n  if (paddle.x + paddle.width > canvas.width) paddle.x = canvas.width - paddle.width\r\n  \r\n  requestAnimationFrame(update)\r\n}\r\n\r\nconst keyDownHandler = (e) => {\r\n  if (e.key === 'ArrowRight' || e.key === 'd') {\r\n    paddle.dx = paddle.speed\r\n  } else if (e.key === 'ArrowLeft' || e.key === 'a') {\r\n    paddle.dx = -paddle.speed\r\n  } else if (e.key === ' ' && gameOver.value) {\r\n    resetGame()\r\n  }\r\n}\r\n\r\nconst keyUpHandler = (e) => {\r\n  if (\r\n    e.key === 'ArrowRight' || e.key === 'ArrowLeft' ||\r\n    e.key === 'a' || e.key === 'd'\r\n  ) {\r\n    paddle.dx = 0\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\n  canvas = document.getElementById('gameScreen')\r\n  ctx = canvas.getContext('2d')\r\n\r\n  document.addEventListener('keydown', keyDownHandler)\r\n  document.addEventListener('keyup', keyUpHandler)\r\n\r\n  update()\r\n})\r\n\r\nonBeforeUnmount(() => {\r\n  document.removeEventListener('keydown', keyDownHandler)\r\n  document.removeEventListener('keyup', keyUpHandler)\r\n})\r\n</script>\r\n\r\n<style>\r\nhtml {\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: 0;\r\n}\r\n\r\n.game-view {\r\n  width: 800px;\r\n  height: 600px;\r\n  background-image: url('../assets/game_bg.png');\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-left: 600px;\r\n  position: relative;\r\n}\r\n\r\n.game-stats {\r\n  position: absolute;\r\n  top: 10px;\r\n  left: 10px;\r\n  color: white;\r\n  font-family: Arial, sans-serif;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n}\r\n\r\nimg {\r\n  display: none;\r\n}\r\n</style>","import script from \"./GameView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./GameView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./GameView.vue?vue&type=style&index=0&id=bb2f7f88&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["brickRowCount","brickColumnCount","brickWidth","brickHeight","brickPadding","brickOffsetTop","brickOffsetLeft","score","ref","lives","gameOver","canvas","ctx","paddle","width","height","x","y","speed","dx","ball","size","dy","bricks","c","r","status","drawBall","beginPath","arc","Math","PI","fillStyle","fill","closePath","drawPaddle","fillRect","drawBricks","brickX","brickY","colors","strokeStyle","strokeRect","drawGameOver","font","textAlign","fillText","drawWin","collisionDetection","b","value","allBricksDestroyed","setTimeout","resetGame","win","update","clearRect","hitPosition","normalized","angle","sin","cos","requestAnimationFrame","keyDownHandler","e","key","keyUpHandler","onMounted","document","getElementById","getContext","addEventListener","onBeforeUnmount","removeEventListener","__exports__"],"sourceRoot":""}